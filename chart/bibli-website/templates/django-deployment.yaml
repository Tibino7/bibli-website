apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.website.service.name }}
  labels:
    {{- include "bibli-website.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.website.replicas }}
  selector:
    matchLabels:
      {{- include "bibli-website.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bibli-website.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: {{ .Values.website.service.name }}-init
        image: "{{ .Values.website.image }}:{{ .Values.website.tag }}"
        imagePullPolicy: IfNotPresent
        env:
          - name: MONGO_HOST
            value: "{{ .Values.mongodb.fullnameOverride }}"
          - name: MONGO_PORT
            value: "{{ .Values.mongodb.service.port }}"
          - name: MONGO_DB
            value: "{{ .Values.mongodb.mongodbDatabase }}"
          - name: MONGO_USER
            value: "{{ .Values.mongodb.mongodbUsername }}"
          - name: MONGO_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mongodb.fullnameOverride }}
                key: mongodb-root-password
          - name: THIS_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DJANGO_ALLOWED_HOSTS
            value: "{{ .Values.website.ingress.host }}"
        command:
        - /bin/bash
        - -c
        - sleep 15 &&
          echo "Begin Migration ..." &&
          python3 manage.py makemigrations books &&
          python3 manage.py migrate &&
          python3 manage.py createsuperuserauto --username tibino7 --password toto --preserve --no-input --email 'tibino7@github.com' &&
          echo "Migration Completed" &&
          sleep 10
      containers:
        - name: bibli-website
          image: "{{ .Values.website.image }}:{{ .Values.website.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
          - name: MONGO_HOST
            value: "{{ .Values.mongodb.fullnameOverride }}"
          - name: MONGO_PORT
            value: "{{ .Values.mongodb.service.port }}"
          - name: MONGO_DB
            value: "{{ .Values.mongodb.mongodbDatabase }}"
          - name: MONGO_USER
            value: "{{ .Values.mongodb.mongodbPassword }}"
          - name: MONGO_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mongodb.fullnameOverride }}
                key: mongodb-root-password
          - name: THIS_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: DJANGO_ALLOWED_HOSTS
            value: "{{ .Values.website.ingress.host }}"
          ports:
            - name: http
              containerPort: {{ .Values.website.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readiness
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 5