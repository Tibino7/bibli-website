# Source: mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mongo.service.name }}
  labels:
    {{- include "bibli-database.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "bibli-database.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bibli-database.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Values.mongo.service.name }}
          image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.mongo.auth.username }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.fullnameOverride }}
                  key: mongodb-password
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.mongo.auth.database }}
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /data/db
              subPath:
          resources:
            {}
      volumes:
        - name: data
          emptyDir: {}